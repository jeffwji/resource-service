<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
		http://www.springframework.org/schema/context   
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 支持flash策略文件访问 -->
	<mvc:resources mapping="/crossdomain.xml" location="/crossdomain.xml"/>
	<mvc:resources mapping="/plugins/**" location="/plugins/**"/>
	
		
	<!-- Make this available across all of Spring MVC -->
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="text" />
					<constructor-arg index="1" value="plain" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="*" />
					<constructor-arg index="1" value="*" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="text" />
					<constructor-arg index="1" value="*" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="application" />
					<constructor-arg index="1" value="json" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
			</list>
		</property>
	</bean>     
    
	<mvc:annotation-driven/>
		
	<context:property-placeholder location="classpath:application.properties" />

	<!-- component-scan will auto populate controllers -->
	 <context:component-scan base-package="com.wang">
	     <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		 <!-- context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		 <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" / -->
	 </context:component-scan>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="${upload.maxUploadSize}" />
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<bean class="com.wang.controllers.ResourceController">
		<property name="repository" value="${resource.repository.base}" />
		<property name="standardWidth" value="${resource.image.standardWidth}" />
		<property name="standardHeight" value="${resource.image.standardHeight}" />
		<property name="generateStandardImageFile" value="${resource.image.generateStandardImageFile}" />
		<property name="pressText" value="${resource.image.watermark.text}" />
		<property name="multipleThread" value="false" />
		<property name="poolSize" value="5" />
		<property name="cacheSizeForOneFile" value="${resource.cache.sizeForOneFile}" />
		<!-- property name="cacheTemporaryFolder" value="${resource.cache.temporaryFolder}" / -->
	</bean>
	
	<!-- 
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="defaultContentType" value="text/json" />
	</bean>
	 -->
</beans>
